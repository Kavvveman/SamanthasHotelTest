//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace SamanthasHotelTest.Dmbl
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Objects;
    using System.Data.Objects.DataClasses;
    using System.Linq;
    
    public partial class KavenDBEntities : DbContext
    {
        public KavenDBEntities()
            : base("name=KavenDBEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public DbSet<Room> Rooms { get; set; }
        public DbSet<User> Users { get; set; }
    
        public virtual int sp_DeleteRoom(Nullable<int> roomID)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_DeleteRoom", roomIDParameter);
        }
    
        public virtual int sp_InsertRoom(string roomName, Nullable<System.DateTime> dateBookedFrom, Nullable<System.DateTime> dateBookedTo, Nullable<System.DateTime> createdOn)
        {
            var roomNameParameter = roomName != null ?
                new ObjectParameter("RoomName", roomName) :
                new ObjectParameter("RoomName", typeof(string));
    
            var dateBookedFromParameter = dateBookedFrom.HasValue ?
                new ObjectParameter("DateBookedFrom", dateBookedFrom) :
                new ObjectParameter("DateBookedFrom", typeof(System.DateTime));
    
            var dateBookedToParameter = dateBookedTo.HasValue ?
                new ObjectParameter("DateBookedTo", dateBookedTo) :
                new ObjectParameter("DateBookedTo", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_InsertRoom", roomNameParameter, dateBookedFromParameter, dateBookedToParameter, createdOnParameter);
        }
    
        public virtual int sp_UpdateRoom(Nullable<int> roomID, string roomName, Nullable<System.DateTime> dateBookedFrom, Nullable<System.DateTime> dateBookedTo, Nullable<System.DateTime> createdOn)
        {
            var roomIDParameter = roomID.HasValue ?
                new ObjectParameter("RoomID", roomID) :
                new ObjectParameter("RoomID", typeof(int));
    
            var roomNameParameter = roomName != null ?
                new ObjectParameter("RoomName", roomName) :
                new ObjectParameter("RoomName", typeof(string));
    
            var dateBookedFromParameter = dateBookedFrom.HasValue ?
                new ObjectParameter("DateBookedFrom", dateBookedFrom) :
                new ObjectParameter("DateBookedFrom", typeof(System.DateTime));
    
            var dateBookedToParameter = dateBookedTo.HasValue ?
                new ObjectParameter("DateBookedTo", dateBookedTo) :
                new ObjectParameter("DateBookedTo", typeof(System.DateTime));
    
            var createdOnParameter = createdOn.HasValue ?
                new ObjectParameter("CreatedOn", createdOn) :
                new ObjectParameter("CreatedOn", typeof(System.DateTime));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_UpdateRoom", roomIDParameter, roomNameParameter, dateBookedFromParameter, dateBookedToParameter, createdOnParameter);
        }
    }
}
